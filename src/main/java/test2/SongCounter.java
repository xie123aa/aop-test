package test2;/** * @Author: georgexie * @description: 注解 * @Date: 2020/7/29 13:42 * @Version 1.0 */import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.annotation.Before;import org.aspectj.lang.annotation.Pointcut;import java.util.HashMap;import java.util.Map;@Aspectpublic class SongCounter {    private Map<Integer, Integer> songCounts = new HashMap<Integer, Integer>();    /**     * 可重用的切点     *("execution(* test2.CompactDisc.play(int)) && args(songNumber)")，其中int代表参数类型，songNumber代表参数名称。     * 给重用的切点重新命名，同时要求带参数，可以读取到方法中的int参数，被切入的方法play本身就有个形参，int，在使用的过程中可以将这个参数代理后传入处理     * @param songNumber     */    @Pointcut("execution(* test2.CompactDisc.play(int)) && args(songNumber)")    public void songPlayed(int songNumber) {    }    //这里的songnumber参数会被hashmap中存储起来    @Before("songPlayed(songNumber)")    public void countSong(int songNumber) {        System.out.println("播放歌曲计数：" + songNumber);        int currentCount = getPlayCount(songNumber);        songCounts.put(songNumber, currentCount + 1);    }    /**     * 获取歌曲播放次数     *     * @param songNumber     * @return     */    public int getPlayCount(int songNumber) {        return songCounts.getOrDefault(songNumber, 0);    }}